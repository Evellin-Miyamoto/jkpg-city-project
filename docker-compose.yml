version: "3.8"

services:
  backend:
    build:
      context: ./backend
    ports:
      - "3000:3000"
    depends_on:
      - pgdb
    environment:
      - DB_HOST=pgdb
      - DB_PORT=5432
      - DB_USER=pguser
      - DB_PASSWORD=pgpassword
      - DB_NAME=jkpg_city_project
    volumes:
      - ./backend:/app
      - ./frontend:/frontend:ro  # Add ':ro' for read-only access
      - ./database:/app/database
      - /app/node_modules
    working_dir: /app  # Make sure commands run inside backend
    command: >
      sh -c "node dbInit.js && npm start"

  frontend:
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backend

  pgdb:
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=pguser
      - POSTGRES_PASSWORD=pgpassword
      - POSTGRES_DB=jkpg_city_project
    volumes:
      - pgdata_new:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pguser -d jkpg_city_project"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata_new:
